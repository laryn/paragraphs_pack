<?php

/**
 * @file
 * Paragraphs pack content list module's tests.
 */

/**
 * Test case for Paragraphs pack content list.
 */
class ParagraphsPackNodeListTestCase extends DrupalWebTestCase {

  /**
   * Give display information to the SimpleTest system.
   *
   * getInfo() returns a keyed array of information for SimpleTest to show.
   *
   * It's a good idea to organize your tests consistently using the 'group'
   * key.
   */
  public static function getInfo() {
    return array(
      'name' => 'Paragraphs pack content list tests',
      'description' => 'Tests:  Paragraphs pack content list installation.',
      'group' => 'Paragraphs pack',
    );
  }

  /**
   * Set up the test environment.
   */
  public function setUp() {
    // We call parent::setUp() with the list of modules we want to enable.
    parent::setUp('paragraphs_pack_node_list');
  }

  /**
   * Test Paragraph Content bundle existence.
   */
  public function testParagraphsPackNodeListBundle() {
    // Test bundle existence.
    $content_bundle_loaded = (paragraphs_bundle_load(PP_BUNDLE_NODE_LIST) != FALSE);
    $this->assertTrue($content_bundle_loaded, t('Paragraph "@paragraph_bundle" bundle was successfully created.', array(
      '@paragraph_bundle' => PP_BUNDLE_NODE_LIST,
    )));

    // TODO:
    // Assing paragraph_item to Basic page bundle.
    // Create Basic page node: $this->drupalCreateNode($settings)
    // Load the page for adding new Basic page: $this->drupalGet($path)
    // Select paragraph bundle (probably not necessary, just one paragraph bundle will be available)
    // Click Add Paragraph button: $this->drupalPostAJAX($path, $edit, $triggering_element)
    // Get viem mode field options: $this->getAllOptions($element)
    // Check the options.
    // Maybe:
    // Create some nodes, Basic page bundles.
    // Create PP_BUNDLE_NODE_LIST instance.
  }

  /**
   * Test items field and instance existance.
   */
  public function testParagraphsPackNodeListFieldItemsExistence() {
    $field_name = PP_FIELD_ITEMS . '_node';

    $field = field_info_field($field_name);
    $this->assertTrue(!empty($field), t('Field "@paragraph_field" exists.', array(
      '@paragraph_field' => $field_name,
    )));

    $instance = field_info_instance(PP_PARAGRAPH_TYPE, $field_name, PP_BUNDLE_NODE_LIST);
    $this->assertTrue(!empty($instance), t('Paragraph "@paragraph_bundle" bundle contains "@paragraph_field" field instance.', array(
      '@paragraph_bundle' => PP_BUNDLE_NODE_LIST,
      '@paragraph_field' => $field_name,
    )));
  }

  /**
   * Test view mode field and instance existance.
   */
  public function testParagraphsPackNodeListFieldViewModeExistence() {
    $field = field_info_field(PP_FIELD_VIEW_MODE);
    $this->assertTrue(!empty($field), t('Field "@paragraph_field" exists.', array(
      '@paragraph_field' => PP_FIELD_VIEW_MODE,
    )));

    $instance = field_info_instance(PP_PARAGRAPH_TYPE, PP_FIELD_VIEW_MODE, PP_BUNDLE_NODE_LIST);
    $this->assertTrue(!empty($instance), t('Paragraph "@paragraph_bundle" bundle contains "@paragraph_field" field instance.', array(
      '@paragraph_bundle' => PP_BUNDLE_NODE_LIST,
      '@paragraph_field' => PP_FIELD_VIEW_MODE,
    )));
  }

}
