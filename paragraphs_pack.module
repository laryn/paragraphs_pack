<?php

// Field types:
define('PP_FIELD_TYPE_VIEW_MODE', 'pp_view_mode');

// Fields:
define('PP_FIELD_BODY', 'pp_body');
define('PP_FIELD_ITEMS', 'pp_items');
define('PP_FIELD_VIEW_MODE', 'pp_view_mode');

// Formatters:
define('PP_FORMATTER_VIEW_MODE', 'pp_view_mode_formatter');

// Content Types:
define('PP_PARAGRAPH_TYPE', 'paragraphs_item');

// Values:
define('PP_VIEW_MODE_NONE', 'none');
define('PP_VALUE_DEFAULT', 'default');


// Includes fields.
require_once dirname(__FILE__) . '/includes/paragraphs_pack.fields.inc';
// Includes formatters.
require_once dirname(__FILE__) . '/includes/paragraphs_pack.formatters.inc';

/**
 * Creates new paragraph.
 *
 * @param string $machine_name
 *  A machine name of new paragraph item.
 * @param string $name
 *  A human readale name of new paragraph item.
 */
function paragraphs_pack_create_paragraph($machine_name, $name) {
  $bundle = new stdClass();

  // Machine name.
  $bundle->bundle = $machine_name;
  // Human readable name.
  $bundle->name = $name;
  $bundle->locked = 1;

  $status = paragraphs_bundle_save($bundle);

  // Log and notify about the change.
  $t = get_t();
  $t_args = array('%name' => $bundle->name);

  if ($status == SAVED_NEW) {
    drupal_set_message($t('The paragraph bundle %name has been added.', $t_args));
    watchdog('paragraphs_pack', 'Added paragraph bundle %name.', $t_args, WATCHDOG_NOTICE, l(t('view'), 'admin/structure/paragraphs'));
  }
  elseif ($status == SAVED_UPDATED) {
    drupal_set_message(t('The paragraph bundle %name has been updated.', $t_args));
  }
  else {
    drupal_set_message($t('The paragraph bundle %name couldn\'t been saved.', $t_args), 'warning');
    watchdog('paragraphs_pack', 'The paragraph bundle %name couldn\'t been saved.', $t_args, WATCHDOG_WARNING, l(t('view')));
  }
}

/**
 * Adds body field to a paragraph bundle.
 *
 * @param string $bundle
 *   A paragraph type machine_name.
 * @param $field_label
 *   A label of the field.
 *
 */
function paragraphs_pack_add_body_field($bundle, $field_label) {
  $field = paragraphs_pack_get_body_field();

  $instance = field_info_instance(PP_PARAGRAPH_TYPE, $field['field_name'], $bundle);
  if (empty($instance)) {
    $instance = array(
      'field_name' => $field['field_name'],
      'entity_type' => PP_PARAGRAPH_TYPE,
      'bundle' => $bundle,
      'label' => $field_label,
      'widget' => array('type' => 'text_textarea_with_summary'),
      'settings' => array('display_summary' => TRUE),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'text_default',
        ),
        'teaser' => array(
          'label' => 'hidden',
          'type' => 'text_summary_or_trimmed',
        ),
      ),
    );
    $instance = field_create_instance($instance);
  }
  return $instance;
}

/**
 * Get/Create body field.
 *
 * This field can be used only on paragraph entity type.
 *
 * @return array
 *  An array containing field values.
 */
function paragraphs_pack_get_body_field() {
  $field = field_info_field(PP_FIELD_BODY);
  if (empty($field)) {
    $field = array(
      'field_name' => PP_FIELD_BODY,
      'type' => 'text_with_summary',
      'entity_types' => array(PP_PARAGRAPH_TYPE),
    );
    $field = field_create_field($field);
  }

  return $field;
}
